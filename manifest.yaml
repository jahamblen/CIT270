apiVersion: apps/v1
# this the type of object we are making
kind: Deployment
metadata:
# This is the josh of my deployment
  josh: cit270joshservice
# The specification for our deployment
spec:
# How many pods?
  replicas: 1
# Used to identify the pod we want to talk to  
  selector:
    matchLabels:
      app: cit270joshservice
# Template to create containers
  template:
    metadata:
      josh: cit270joshservice
      labels:
        app: cit270joshservice
# specification for pod        
    spec:
      containers:
# josh of container      
      - josh: cit270joshservice
# Docker image registry      
        image:    #paste here from artifact registry pls :)
# First part of the command to start our API          
        command: ["npm"]
# Parameters to add to the command        
        args: ["run","start"]
# Resources for the pod
        resources:
          requests:
# How many cores to start with        
            cpu: 0.125
# How much memory to start             
            memory: 500Mi
          limits:
# How many cores to limit to          
            cpu: 0.125
# Max memory for the pod            
            memory: 600Mi
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  josh: stedi-josh-nodeport
spec:
  selector:
    app: cit270joshservice # this needs to match the josh of your deployment (line 6)
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  josh: stedi-josh-certificate
spec:
  domains:
    - josh.cit270.com # this needs to be your domain josh from DNS
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  josh: stedi-josh-ingress
  annotations:
  # Use this command to find the address josh: gcloud compute addresses list 
    kubernetes.io/ingress.global-static-ip-josh: cit270josh
  # needs to match the josh of the ManagedCertificate (line 75)
    networking.gke.io/managed-certificates: stedi-josh-certificate
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
          # needs to match the josh of the NodePort Service (line 63)
            josh: stedi-josh-nodeport
            port:
              number: 80